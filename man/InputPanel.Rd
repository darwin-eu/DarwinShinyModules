% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/InputPanel.R
\name{InputPanel}
\alias{InputPanel}
\title{InputPanel Module Class}
\description{
InputPanel module that handles inputs based on an input function like:
\code{shiny::selectInput()}, \code{shinyWidgets::pickerInput()}, etc.
}
\details{
The assigned input values are accessible in the reactive values
\code{inputValues} field. Other modules may trigger off these reactive values
with i.e. \code{shiny::observeEvent()}.
}
\examples{
library(DarwinShinyModules)

inputPanel <- InputPanel$new(
  funs = list(
    select = shiny::selectInput,
    text = shiny::textInput
  ),
  args = list(
    select = list(inputId = "select", choices = c("a", "b"), label = "select"),
    text = list(inputId = "text", label = "text")
  )
)

if (interactive()) {
  preview(inputPanel)
}
}
\section{Super class}{
\code{\link[DarwinShinyModules:ShinyModule]{DarwinShinyModules::ShinyModule}} -> \code{InputPanel}
}
\section{Active bindings}{
\if{html}{\out{<div class="r6-active-bindings">}}
\describe{
\item{\code{parentNamespace}}{(\code{character(1)}) Namespace of the parent module.}

\item{\code{funs}}{(\code{list()}) Named list of xInput functions used \code{list(funA = shiny::selectInput)}.}

\item{\code{args}}{(\code{list()}) Named list of arguments used by xInput functions \code{list(funA = list(inputId = "name", label = "name"))}.}

\item{\code{inputValues}}{(\code{reactiveValues}) Values passed from the input fields.}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-InputPanel-new}{\code{InputPanel$new()}}
\item \href{#method-InputPanel-validate}{\code{InputPanel$validate()}}
\item \href{#method-InputPanel-clone}{\code{InputPanel$clone()}}
}
}
\if{html}{\out{
<details open><summary>Inherited methods</summary>
<ul>
<li><span class="pkg-link" data-pkg="DarwinShinyModules" data-topic="ShinyModule" data-id="UI"><a href='../../DarwinShinyModules/html/ShinyModule.html#method-ShinyModule-UI'><code>DarwinShinyModules::ShinyModule$UI()</code></a></span></li>
<li><span class="pkg-link" data-pkg="DarwinShinyModules" data-topic="ShinyModule" data-id="server"><a href='../../DarwinShinyModules/html/ShinyModule.html#method-ShinyModule-server'><code>DarwinShinyModules::ShinyModule$server()</code></a></span></li>
</ul>
</details>
}}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-InputPanel-new"></a>}}
\if{latex}{\out{\hypertarget{method-InputPanel-new}{}}}
\subsection{Method \code{new()}}{
Initializer method
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{InputPanel$new(funs, args, growDirection = "vertical")}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{funs}}{(\code{list()}) Named list of xInput functions used \code{list(funA = shiny::selectInput)}.}

\item{\code{args}}{(\code{list()}) Named list of arguments used by xInput functions \code{list(funA = list(inputId = "name", label = "name"))}}

\item{\code{growDirection}}{The direction in which this component will be placed, either "horizontal" or "vertical" (default)}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
(\code{invisible(self)})
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-InputPanel-validate"></a>}}
\if{latex}{\out{\hypertarget{method-InputPanel-validate}{}}}
\subsection{Method \code{validate()}}{
Validation method
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{InputPanel$validate()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
(\code{self})
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-InputPanel-clone"></a>}}
\if{latex}{\out{\hypertarget{method-InputPanel-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{InputPanel$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
