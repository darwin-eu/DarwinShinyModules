% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Plot.R
\name{Plot}
\alias{Plot}
\title{Plot}
\description{
Plot Interface
}
\section{Super class}{
\code{\link[DarwinShinyModules:Module]{DarwinShinyModules::Module}} -> \code{Plot}
}
\section{Active bindings}{
\if{html}{\out{<div class="r6-active-bindings">}}
\describe{
\item{\code{data}}{Data used for plot.}

\item{\code{fun}}{Plotting function.}

\item{\code{reactiveValues}}{Reactive values.}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-Plot-new}{\code{Plot$new()}}
\item \href{#method-Plot-updateDataReactive}{\code{Plot$updateDataReactive()}}
\item \href{#method-Plot-clone}{\code{Plot$clone()}}
}
}
\if{html}{\out{
<details open><summary>Inherited methods</summary>
<ul>
<li><span class="pkg-link" data-pkg="DarwinShinyModules" data-topic="Module" data-id="UI"><a href='../../DarwinShinyModules/html/Module.html#method-Module-UI'><code>DarwinShinyModules::Module$UI()</code></a></span></li>
<li><span class="pkg-link" data-pkg="DarwinShinyModules" data-topic="Module" data-id="server"><a href='../../DarwinShinyModules/html/Module.html#method-Module-server'><code>DarwinShinyModules::Module$server()</code></a></span></li>
<li><span class="pkg-link" data-pkg="DarwinShinyModules" data-topic="Module" data-id="validate"><a href='../../DarwinShinyModules/html/Module.html#method-Module-validate'><code>DarwinShinyModules::Module$validate()</code></a></span></li>
</ul>
</details>
}}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Plot-new"></a>}}
\if{latex}{\out{\hypertarget{method-Plot-new}{}}}
\subsection{Method \code{new()}}{
initialize
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Plot$new(appId, data, fun)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{appId}}{(\code{character(1)}) ID of the app, to use for namespacing.}

\item{\code{data}}{Data to plot with, usually a \code{data.frame}-like object.}

\item{\code{fun}}{Function to plot with, with one argument: \code{data}.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
\code{self}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Plot-updateDataReactive"></a>}}
\if{latex}{\out{\hypertarget{method-Plot-updateDataReactive}{}}}
\subsection{Method \code{updateDataReactive()}}{
Update data within reactive context (\code{reactive()} or \code{observe()})
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Plot$updateDataReactive(data)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{data}}{Updated data}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
\code{self}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Plot-clone"></a>}}
\if{latex}{\out{\hypertarget{method-Plot-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Plot$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
