% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Plot.R
\name{Plot}
\alias{Plot}
\title{Plot Decorator Class}
\description{
This class is a \code{decorator} and is not meant to be directly used, but to be
inherited by other modules, like \code{PlotStaic}, \code{PlotWidget}, and \code{PlotPlotly}.
}
\details{
The inherited \code{Plot} modules evaluate the provided function with a provided
data object.

To add a new plot type it is required to inherit from the \code{Plot} class, and
to override the private \code{.UI()} and \code{.server()} methods.
}
\section{Super class}{
\code{\link[DarwinShinyModules:ShinyModule]{DarwinShinyModules::ShinyModule}} -> \code{Plot}
}
\section{Active bindings}{
\if{html}{\out{<div class="r6-active-bindings">}}
\describe{
\item{\code{title}}{(\code{character(1)}) Title to use for the plot.}

\item{\code{fun}}{Plotting function.}

\item{\code{args}}{(\code{reactiveValues}) Arguments used for plot.}

\item{\code{plot}}{Plot object.}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-Plot-new}{\code{Plot$new()}}
\item \href{#method-Plot-validate}{\code{Plot$validate()}}
\item \href{#method-Plot-clone}{\code{Plot$clone()}}
}
}
\if{html}{\out{
<details open><summary>Inherited methods</summary>
<ul>
<li><span class="pkg-link" data-pkg="DarwinShinyModules" data-topic="ShinyModule" data-id="UI"><a href='../../DarwinShinyModules/html/ShinyModule.html#method-ShinyModule-UI'><code>DarwinShinyModules::ShinyModule$UI()</code></a></span></li>
<li><span class="pkg-link" data-pkg="DarwinShinyModules" data-topic="ShinyModule" data-id="server"><a href='../../DarwinShinyModules/html/ShinyModule.html#method-ShinyModule-server'><code>DarwinShinyModules::ShinyModule$server()</code></a></span></li>
</ul>
</details>
}}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Plot-new"></a>}}
\if{latex}{\out{\hypertarget{method-Plot-new}{}}}
\subsection{Method \code{new()}}{
initialize
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Plot$new(fun, args, title = "Plot")}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{fun}}{(\verb{function()}) Function to plot with.}

\item{\code{args}}{(\code{list}) Named list of arguments to pass to \code{fun}.}

\item{\code{title}}{(\code{character(1)}) Title of the plot. When set to \code{NULL}, no title is shown.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
\code{self}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Plot-validate"></a>}}
\if{latex}{\out{\hypertarget{method-Plot-validate}{}}}
\subsection{Method \code{validate()}}{
Validator method
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Plot$validate()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
(\code{self})
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Plot-clone"></a>}}
\if{latex}{\out{\hypertarget{method-Plot-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Plot$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
