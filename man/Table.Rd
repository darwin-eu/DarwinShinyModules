% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Table.R
\name{Table}
\alias{Table}
\title{Table}
\description{
Table Module
}
\examples{
library(DarwinShinyModules)

table <- Table$new(data = mtcars)

if (interactive()) {
  preview(table)
}
}
\section{Super class}{
\code{\link[DarwinShinyModules:ShinyModule]{DarwinShinyModules::ShinyModule}} -> \code{Table}
}
\section{Active bindings}{
\if{html}{\out{<div class="r6-active-bindings">}}
\describe{
\item{\code{data}}{(\code{data.frame}) Reactive data, use \code{shiny::isolate()} to get the non-reactive data.}

\item{\code{reactiveValues}}{(\code{reactiveValues}) Reactive values used by the \code{Table} object.}

\item{\code{bindings}}{(\code{reactivevalues}) Reactive bindings for \code{DT::datatable}.}

\item{\code{title}}{(\code{character}) Title of the table.}

\item{\code{options}}{(\code{list(n)}) List of options used by \code{DT::datatable}.}

\item{\code{filter}}{(\code{character(1)}) Filter option used by \code{DT::datatable}.}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-Table-new}{\code{Table$new()}}
\item \href{#method-Table-validate}{\code{Table$validate()}}
\item \href{#method-Table-UI}{\code{Table$UI()}}
\item \href{#method-Table-server}{\code{Table$server()}}
\item \href{#method-Table-clone}{\code{Table$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Table-new"></a>}}
\if{latex}{\out{\hypertarget{method-Table-new}{}}}
\subsection{Method \code{new()}}{
initialize
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Table$new(
  data,
  title = "Table",
  options = list(scrollX = TRUE),
  filter = "top"
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{data}}{(\code{data.frame}) Data to plot with, usually a \code{data.frame}-like object.}

\item{\code{options}}{(\code{list}) table options, by default it shows additional items next to
the table like search box, pagination, etc. Only display the table using
list(dom = '')}

\item{\code{filter}}{(\code{character}: \code{"top"}) filter option, it can be either \code{"none"}, \code{"bottom"} or \code{"top"} (default)}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
\code{self}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Table-validate"></a>}}
\if{latex}{\out{\hypertarget{method-Table-validate}{}}}
\subsection{Method \code{validate()}}{
validate
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Table$validate()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
\code{self}
UI
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Table-UI"></a>}}
\if{latex}{\out{\hypertarget{method-Table-UI}{}}}
\subsection{Method \code{UI()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Table$UI()}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{title}}{(\code{character(1)}) Title to use for the DataTable.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
\code{shiny.tag.list}
server
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Table-server"></a>}}
\if{latex}{\out{\hypertarget{method-Table-server}{}}}
\subsection{Method \code{server()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Table$server(input, output, session)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input}}{(\code{input})}

\item{\code{output}}{(\code{output})}

\item{\code{session}}{(\code{session})}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
\code{NULL}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Table-clone"></a>}}
\if{latex}{\out{\hypertarget{method-Table-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Table$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
