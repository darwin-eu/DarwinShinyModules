% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/makeModule.R
\name{makeModule}
\alias{makeModule}
\title{makeModule}
\usage{
makeModule(ui, server)
}
\arguments{
\item{ui}{Shiny UI elements i.e. a \code{shiny.tag.list}, or similar ui objects
from packages like \code{shiny}, \code{shinydashboard}, or \code{bslib}}

\item{server}{(\code{function}) A server function with atleast a \code{input} and
\code{output} argument.}
}
\value{
\code{ShinyModule}
}
\description{
Function to make a \code{ShinyModule} from an UI element and server function.
}
\details{
The function allows for easy migration between bespoke shiny code and the
modular framework in \code{DarwinShinyModules}, without having to implement an
\code{R6} class. One caveat is, is the generated module is completely isolated.
Meaning that the module does not allow other modules to read from or write
to any defined (reactive) variables in the provided server function.
}
\examples{
library(DarwinShinyModules)
library(shiny)

ui <- tagList(p("My UI"))
server <- function(input, output, session) {
  # Do stuff
}

mod <- makeModule(ui, server)

if (interactive()) {
  preview(mod)
}
}
